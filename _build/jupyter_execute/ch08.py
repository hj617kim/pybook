#!/usr/bin/env python
# coding: utf-8

# # 입력과 출력
# 
# 
# 
# 
# 

# ## 입력
# 
# 어떤 일은 사용자가 입력한 값을 사용해야 할 때가 있다.  
# 예를 들어, 숫자맞히기 게임을 생각해보자. 숫자맞히기 게임은 말 그대로 참여자가 정해진 숫자를 맞히는 게임으로 반드시 사용자로부터 값을 입력받아야 한다.  
#   
#   
# 이런 경우 사용자의 입력은 `input()` 함수를 사용하여 받을 수 있다.  
# 
# `input()`을 입력하고 코드를 실행하면, 아래에 값을 입력하라는 창이 나온다. 그곳에 Hello, world! 라고 입력하고 엔터Enter를 누르면 입력한 문자열이 그대로 출력된다. 

# ```python
# >>> input()
# Hello, world!
# 'Hello, world!'
# ```

# `input()` 함수로 입력받은 값은 변수에 할당하여 사용할 수도 있다. 
# 
# ```python
# >>> hi = input()
# Hello, world!
# >>> print(hi)
# Hello, world!
# ```
# 

# 이때 `input()` 함수로 입력받은 값은 문자열(str)이다.

# ```python
# >>> type(hi)
# str
# ```
# 
# ```python
# >>> num = input() #123
# 123
# >>> print(type(num))
# <class 'str'>
# ```

# 사용자에게 무엇을 입력할지 알려주고 싶다면 아래와 같이 할 수 있다.
# 
# ```python
# >>> print("정수를 입력하세요!")
# 정수를 입력하세요!
# >>> num1 = input()
# 123
# >>> print("입력한 정수는", num1, "입니다.")
# 입력한 정수는 123 입니다.
# ```
# 
# ```python
# >>> num2 = input("정수를 입력하세요 : ")
# 정수를 입력하세요 : 321
# >>> print("입력한 정수는", num2, "입니다.")
# 입력한 정수는 321 입니다.
# ```

# 예제를 통해 `input()` 함수에 대해 더 살펴보자.

# ex1) `input()` 함수를 이용하여 사용자로부터 정수를 입력받아, 그 정수의 제곱을 출력하는 코드를 작성하여라.

# ```python
# >>> num3 = input("정수를 입력하세요 : ")
# 정수를 입력하세요 : 6
# >>> print("입력한 정수", num3, "의 제곱은", int(num3)**2, "입니다.")
# 입력한 숫자 6 의 제곱은 36 입니다.
# ```

# 주의) `input()`함수로 입력받은 값은 문자열이다. 

# ex2) 사용자로부터 자연수를 입력받아, 그 자연수의 약수를 출력하는 코드를 작성하여라.  
# 
# ```python
# >>> num4 = int(input("자연수를 입력하세요 : "))
# 자연수를 입력하세요 : 6
# >>> for i in range(1, num4 + 1) :
#         if num4 % i == 0:
#             print(i)
# 1
# 2
# 3
# 6
# ```

# ex3) 두 정수를 입력받아, 두 정수의 합을 출력하는 코드를 작성하여라.
# 
# ```python
# >>> numA = int(input("정수를 입력하세요 : "))
# 정수를 입력하세요 : 5
# >>> numB = int(input("정수를 입력하세요 : "))
# 정수를 입력하세요 : 9
# >>> print(numA, "+", numB, "= ", numA + numB)
# 5 + 9 =  14
# ```

# 아래와 같이 두 정수를 한 번에 입력받을 수도 있다.

# ```python
# >>> numA, numB = input("두 정수를 콤마(,)로 구분하여 입력하세요 : ").split(",")
# 두 정수를 콤마(,)로 구분하여 입력하세요 : 5,9
# >>> print(numA, "+", numB, "= ", int(numA) + int(numB))
# 5 + 9 =  14
# ```

# `map()` 함수를 활용하여 `numA`, `numB` 각각에 `int` 함수를 자동으로 적용할 수 있다.  
# 
# ```python
# >>> numA, numB = map(int, input("두 정수를 콤마(,)로 구분하여 입력하세요 : ").split(","))
# 두 정수를 콤마(,)로 구분하여 입력하세요 : 5,9
# >>> print(numA, "+", numB, "= ", numA + numB)
# 5 + 9 =  14
# ```

# ## 출력

# 그 동안 출력을 위해 `print()` 함수를 사용하였다. 예를 들어, 문자열 Hello World 를 출력하고 싶다면, 아래와 같이 코드를 작성하면 된다.

# In[1]:


print("Hello, World")


# 이제 `print()` 함수에 대해서 조금 더 살펴보자.

# * 큰따옴표(또는 작은따옴표)로 둘러싸인 문자열을 연속해서 사용하면 문자열에서 +연산을 한 것과 동일한 결과를 출력해준다.

# In[2]:


print("Hello ""World")


# In[3]:


print('Hello ''World')


# In[4]:


print('Hello '"World")


# In[5]:


print("Hello " + "World")


# * 문자열 사이에 콤마(,)를 사용하면 띄어쓰기를 할 수 있다.

# In[6]:


print("Hello", "World")


# * 인자들 사이에 구분자를 넣고 싶다면, `sep`을 변경하면 된다. `sep`의 기본값은 공백이다.

# In[7]:


print("010", "1234", "5678", sep = "-")


# In[8]:


print("Hello", "World", sep = ", ")


# * 마지막에 출력할 문자를 변경하고 싶다면, `end`를 변경하면 된다. `end`의 기본값은 줄바꿈(`\n`)이다.

# In[9]:


print("a")
print("b", end = "")
print("c", end = "\t")
print("d")

